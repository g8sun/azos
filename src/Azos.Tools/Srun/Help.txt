<push>
<f color=magenta>
 Usage:
<f color=white>
   srun <f color=green>script_file [entry_point_sub_name]<f color=darkCyan> [/h | /? | /help]
              [/runner
                  [<f color=darkRed>type<f color=darkCyan>=type_name]
                  [... runner type-specific attributes]
              ]
              [-r|-result]
              [-g|-global]
              [-s|-silent]
              [-state json_file_name]
              [-vars var1=val1 [varX=valX]]
              [-dump-source]

<f color=gray>
Executes a script contained in a script_file. The system performs "_include" expansion.
You can specify optional "entry_point_sub_name".


<f color=magenta>
 Specifiers:

<f color=green>script_file<f color=gray> - fully qualified script source path
<f color=green>entry_point_sub_name<f color=gray> - optional entry point of the script
<f color=green>-r|result<f color=gray> - dumps step runner result object
<f color=green>-g|global<f color=gray> - dumps global JSON object
<f color=green>-s|silent<f color=gray> - suppresses info
<f color=green>-state json_file_name<f color=gray> - loads json data into runner globals
<f color=green>-vars var1=val1 [varX=valX]<f color=gray> - sets global variables by name
<f color=green>-dump-source<f color=gray> - if present dumps all source code into console

<f color=magenta>
 Examples:

<f color=yellow> srun d:\scr\devops\setup.laconf network<f color=gray>
Runs a sub "network" from the specified script file

<f color=yellow> srun d:\scr\devops\setup.laconf network -state data.json<f color=gray>
Runs a sub "network" from the specified script file loading json data into globals

<f color=yellow> srun d:\scr\devops\setup.laconf -vars port=123<f color=gray>
Runs the specified script file pre-setting global "port" to "123"

<pop>