/*<FILE_LICENSE>
 * Azos (A to Z Application Operating System) Framework
 * The A to Z Foundation (a.k.a. Azist) licenses this file to you under the MIT license.
 * See the LICENSE file in the project root for more information.
</FILE_LICENSE>*/
using System;
using System.Text;
using System.Reflection;

using Azos.Glue.Tools;

/*
 Usage pattern:
   gluec Azos.Sky.dll -c "Azos.Sky.Clients.Tools.SkyGluecCompiler, Azos.Sky" -o ns-suffix="" cl-suffix="" ns-root="Azos.Sky.Clients"
*/


namespace Azos.Sky.Clients.Tools
{
  /// <summary>
  /// Generates Glue client proxies for Sky, using Sky-specific client interface name
  /// </summary>
  public sealed class SkyGluecCompiler : CSharpGluecCompiler
  {
    public SkyGluecCompiler(Assembly asm) : base(asm) {}


    protected override string FileHeader()
    {
      return
@"//Generated by {0}
{1}".Args( GetType().FullName, base.FileHeader() );
    }

    protected override void BeforeClientClass(StringBuilder sb, Type tc, string cname, string iname)
    {
      sb.AppendLine("// This implementation needs {0}, so".Args(iname));
      sb.AppendLine("// it can be used with ServiceClientHub class");
      sb.AppendLine();
    }

    protected override string GetClientInterfaceName(Type tc)
    {
      return TypeToStr(tc) + "Client";//<---Sky-specific client interface name
    }
  }

}
