/*<FILE_LICENSE>
 * Azos (A to Z Application Operating System) Framework
 * The A to Z Foundation (a.k.a. Azist) licenses this file to you under the MIT license.
 * See the LICENSE file in the project root for more information.
</FILE_LICENSE>*/


using System;
using Azos.Serialization.Bix;
using Azos.Serialization.JSON;

namespace Azos.Data.Business
{
  /// <summary>
  /// Describes entity data change in the backend store system.
  /// This type is usually returned from query handlers and is returned via <see cref="ChangeResult.Data"/> field
  /// </summary>
  [Bix("a1c2194e-816b-4d2b-9b7f-46de7854a442")]
  [Schema(Description = "Describes entity data change in the backend store system (EntityId, VersionInfo)")]
  public class EntityChangeInfo : FragmentModel
  {
    public static EntityChangeInfo FromChange(ChangeResult cr) => FromChangeAs<EntityChangeInfo>(cr);
    public static T FromChangeAs<T>(ChangeResult cr) where T : EntityChangeInfo
    {
      if (cr.Data is T existing) return existing;

      var map = cr.Data as JsonDataMap;
      map.NonNull(nameof(map));

      var result = JsonReader.ToDoc<T>(map);
      return result;
    }


    [Field(required: true, Description = "An id of the changed entity; " +
    "If entity data record was created (inserted) this would contain its canonical id which could have been generated by the server")]
    public EntityId Id { get; set; }

    [Field(required: true, Description = "Entity data version generated by this change")]
    public VersionInfo Version { get; set; }
  }
}
